include: all_lint_rules.yaml
analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.gr.dart"
    - "**/l10n/*.dart"
    - "cli-dart-lokalise/**"
  errors:
    # Otherwise cause the import of all_lint_rules to warn because of some rules conflicts.
    # We explicitly enabled even conflicting rules and are fixing the conflict
    # in this file
    included_file_warning: ignore
    # false positive when using Freezed
    invalid_annotation_target: ignore

linter:
  rules:
    only_throw_errors: false

    do_not_use_environment: false

    public_member_api_docs: false

    lines_longer_than_80_chars: false

    implicit_call_tearoffs: false

    # False positive
    one_member_abstracts: false

    # Too verbose
    prefer_final_parameters: false

    # Too verbose with little value, and this is taken care of by the Flutter devtool anyway.
    diagnostic_describe_all_properties: false

    # Does not improve readability
    cascade_invocations: false

    # Conflicts with `prefer_single_quotes`
    prefer_double_quotes: false

    # Conflicts with `omit_local_variable_types` and other rules.
    # As per Dart guidelines, we want to avoid unnecessary types to make the code
    # more readable.
    # See https://dart.dev/guides/language/effective-dart/design#avoid-type-annotating-initialized-local-variables
    always_specify_types: false
    avoid_types_on_closure_parameters: false

    # Incompatible with `prefer_final_locals`
    # Having immutable local variables makes larger functions more predictable
    # so we will use `prefer_final_locals` instead.
    unnecessary_final: false

    # Not quite suitable for Flutter, which may have a `build` method with a single
    # return, but that return is still complex enough that a "body" is worth it.
    prefer_expression_function_bodies: false

    # Conflicts with the convention used by flutter, which puts `Key key`
    # and `@required Widget child` last.
    always_put_required_named_parameters_first: false

    # There are situations where we voluntarily want to catch everything.
    avoid_catches_without_on_clauses: false

    # Conflicts with disabling `implicit-dynamic`
    avoid_annotating_with_dynamic: false

    # conflicts with `prefer_relative_imports`
    always_use_package_imports: false

    # Disabled for now until we have NNBD as it otherwise conflicts with `missing_return`
    no_default_cases: false